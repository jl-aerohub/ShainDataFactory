{
	"name": "Item_Reference_DataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AerohubStorageAccount",
						"type": "LinkedServiceReference"
					},
					"name": "MeasurementQIFIn"
				},
				{
					"linkedService": {
						"referenceName": "MFIN Database",
						"type": "LinkedServiceReference"
					},
					"name": "FeatureUpdate"
				},
				{
					"dataset": {
						"referenceName": "Characteristic_Item_Sink",
						"type": "DatasetReference"
					},
					"name": "CharacteristicUpdate"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Character_Feature_Reference_Sink",
						"type": "DatasetReference"
					},
					"name": "CharacterFeatureReferenceSink"
				}
			],
			"transformations": [
				{
					"name": "CharacteristicItemSelect"
				},
				{
					"name": "AngleBetweenReference"
				},
				{
					"name": "AngleReference"
				},
				{
					"name": "AngularCoordinateReference"
				},
				{
					"name": "AngleFromReference"
				},
				{
					"name": "AngularityReference"
				},
				{
					"name": "ChordReference"
				},
				{
					"name": "CircularityReference"
				},
				{
					"name": "CircularRunoutReference"
				},
				{
					"name": "CoaxialityReference"
				},
				{
					"name": "ConcentricityReference"
				},
				{
					"name": "ConicalTaperReference"
				},
				{
					"name": "ConicityReference"
				},
				{
					"name": "CurveLengthReference"
				},
				{
					"name": "CylindricityReference"
				},
				{
					"name": "DepthReference"
				},
				{
					"name": "DiameterReference"
				},
				{
					"name": "DistanceBetweenReference"
				},
				{
					"name": "DistanceFromReference"
				},
				{
					"name": "EllipticityReference"
				},
				{
					"name": "FlatTaperReference"
				},
				{
					"name": "FlatnessReference"
				},
				{
					"name": "HeightReference"
				},
				{
					"name": "LengthReference"
				},
				{
					"name": "LinearCoordinateReference"
				},
				{
					"name": "LineProfileReference"
				},
				{
					"name": "OtherFormReference"
				},
				{
					"name": "ParallelismReference"
				},
				{
					"name": "PerpendicularityReference"
				},
				{
					"name": "PointProfileReference"
				},
				{
					"name": "PositionReference"
				},
				{
					"name": "RadiusReference"
				},
				{
					"name": "SphericalDiameterReference"
				},
				{
					"name": "SphericalRadiusReference"
				},
				{
					"name": "SphericityReference"
				},
				{
					"name": "SquareReference"
				},
				{
					"name": "StraightnessReference"
				},
				{
					"name": "SurfaceProfileReference"
				},
				{
					"name": "SurfaceProfileNonUniformReference"
				},
				{
					"name": "SurfaceTextureReference"
				},
				{
					"name": "SymmetryReference"
				},
				{
					"name": "ThicknessReference"
				},
				{
					"name": "ThreadReference"
				},
				{
					"name": "ToroidicityReference"
				},
				{
					"name": "TotalRunoutReference"
				},
				{
					"name": "UserDefinedAttributeReference"
				},
				{
					"name": "UserDefinedLinearReference"
				},
				{
					"name": "UserDefinedAngularReference"
				},
				{
					"name": "UserDefinedTemperatureReference"
				},
				{
					"name": "UserDefinedAreaReference"
				},
				{
					"name": "UserDefinedForceReference"
				},
				{
					"name": "UserDefinedMassReference"
				},
				{
					"name": "UserDefinedPressureReference"
				},
				{
					"name": "UserDefinedSpeedReference"
				},
				{
					"name": "UserDefinedTimeReference"
				},
				{
					"name": "UserDefinedUnitReference"
				},
				{
					"name": "WeldFilletReference"
				},
				{
					"name": "WeldPlugReference"
				},
				{
					"name": "WeldSlotReference"
				},
				{
					"name": "WeldSpotReference"
				},
				{
					"name": "WeldStudReference"
				},
				{
					"name": "WeldSeamReference"
				},
				{
					"name": "WeldSurfacingReference"
				},
				{
					"name": "WeldEdgeReference"
				},
				{
					"name": "WeldSquareReference"
				},
				{
					"name": "WeldBevelReference"
				},
				{
					"name": "WeldVReference"
				},
				{
					"name": "WeldUReference"
				},
				{
					"name": "WeldJReference"
				},
				{
					"name": "WeldFlareVReference"
				},
				{
					"name": "WeldFlareBevelReference"
				},
				{
					"name": "WeldScarfReference"
				},
				{
					"name": "WeldCompoundReference"
				},
				{
					"name": "WidthReference"
				},
				{
					"name": "ReferenceUnion"
				},
				{
					"name": "RemoveNullRows"
				},
				{
					"name": "FeatureIdSelect"
				},
				{
					"name": "VersionSelect"
				},
				{
					"name": "ToTimestamp"
				},
				{
					"name": "CharacterisitcLookup"
				},
				{
					"name": "FeatureLookup"
				},
				{
					"name": "CharacteristicIdSelect"
				},
				{
					"name": "VersionJoin"
				},
				{
					"name": "FeatureUpdateJoin"
				},
				{
					"name": "CharacteristicUpdateJoin"
				}
			],
			"scriptLines": [
				"source(output(",
				"          QIFDocument as ({@idMax} as short, {@versionQIF} as string, {@xmlns} as string, Attributes as ({@n} as short, AttributeBool as ({@name} as string, {@value} as boolean)[], AttributeD1 as ({@name} as string, {@value} as double), AttributeI1 as ({@name} as string, {@value} as short)[]), Characteristics as (CharacteristicDefinitions as ({@n} as boolean, DiameterCharacteristicDefinition as ({@id} as short, Tolerance as (DefinedAsLimit as boolean, MaxValue as ({@decimalPlaces} as short, {@linearUnit} as string, {_value_} as double), MinValue as ({@decimalPlaces} as short, {@linearUnit} as string, {_value_} as double)))), CharacteristicItems as ({@n} as short, AngleBetweenCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], AngleCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], AngleFromCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], AngularCoordinateCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], AngularityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], ChordCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], CircularRunoutCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], CircularityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], CoaxialityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], ConcentricityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], ConicalTaperCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], ConicityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], CurveLengthCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], CylindricityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], DepthCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], DiameterCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], DistanceBetweenCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], DistanceFromCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], EllipticityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], FlatTaperCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], FlatnessCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], HeightCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], LengthCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], LineProfileCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], LinearCoordinateCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], OtherFormCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], ParallelismCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], PerpendicularityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], PointProfileCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], PositionCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], RadiusCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], SphericalDiameterCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], SphericalRadiusCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], SphericityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], SquareCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], StraightnessCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], SurfaceProfileCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], SurfaceProfileNonUniformCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], SurfaceTextureCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], SymmetryCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], ThicknessCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], ThreadCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], ToroidicityCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], TotalRunoutCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedAngularCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedAreaCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedAttributeCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedForceCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedLinearCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedMassCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedPressureCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedSpeedCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedTemperatureCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedTimeCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], UserDefinedUnitCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldBevelCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldCompoundCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldEdgeCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldFilletCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldFlareBevelCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldFlareVCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldJCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldPlugCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldScarfCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldSeamCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldSlotCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldSpotCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldSquareCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldStudCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldSurfacingCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldUCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WeldVCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[], WidthCharacteristicItem as ({@id} as short, CharacteristicNominalId as short, FeatureItemIds as ({@n} as short, Id as short[]), Name as short)[]), CharacteristicNominals as ({@n} as boolean, DiameterCharacteristicNominal as ({@id} as short, Attributes as ({@n} as short, AttributeStr as ({@name} as string, {@value} as boolean), AttributeUser as ({@name} as string, {@nameUserAttribute} as string, UserDataXML as (ReportableStates as ({@n} as boolean, {@xmlns} as string, Reportable as ({@reportType} as short, {@val} as boolean))))), CharacteristicDefinitionId as short, CharacteristicDesignator as (Designator as boolean), FeatureNominalIds as ({@n} as boolean, Id as short), Name as string, TargetValue as ({@decimalPlaces} as short, {@linearUnit} as string, {_value_} as double))), FormalStandardId as short), Features as (FeatureDefinitions as ({@n} as boolean, CylinderFeatureDefinition as ({@id} as short, Bottom as (BottomEnum as string), Diameter as double, InternalExternal as string, Length as boolean)), FeatureItems as ({@n} as short, CircleFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], CircularArcFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], ConeFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], ConicalSegmentFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], CylinderFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], CylindricalSegmentFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], EdgePointFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], EllipseFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], EllipticalArcFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], ElongatedCircleFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], ElongatedCylinderFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], ExtrudedCrossSectionFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], GroupFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], LineFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], MarkingFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], OppositeAngledLinesFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], OppositeAngledPlanesFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], OppositeParallelLinesFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], OppositeParallelPlanesFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], OtherCurveFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], OtherNonShapeFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], OtherShapeFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], OtherSurfaceFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], PlaneFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], PointDefinedCurveFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], PointDefinedSurfaceFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], PointFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], SphereFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], SphericalSegmentFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], SurfaceOfRevolutionFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], ThreadedFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], ToroidalSegmentFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[], TorusFeatureItem as ({@id} as short, DeterminationMode as (Checked as string), FeatureName as short, FeatureNominalId as short)[]), FeatureNominals as ({@n} as boolean, CylinderFeatureNominal as ({@id} as short, Attributes as ({@n} as short, AttributeStr as ({@name} as string, {@value} as string)[]), Axis as (AxisPoint as string, Direction as string), EntityInternalIds as ({@n} as boolean, Id as short), FeatureDefinitionId as short, Name as string))), FileUnits as (OtherUnits as ({@n} as short, AngularUnit as (SIUnitName as string, UnitConversion as (Factor as double), UnitName as string)[], LinearUnit as (SIUnitName as string, UnitConversion as (Factor as double), UnitName as string)[], MassUnit as (SIUnitName as string, UnitConversion as (Factor as double), UnitName as string)[]), PrimaryUnits as (LinearUnit as (SIUnitName as string, UnitConversion as (Factor as double), UnitName as string), MassUnit as (SIUnitName as string, UnitName as string), PMIAngularUnit as (SIUnitName as string, UnitConversion as (Factor as double), UnitName as string))), Header as (Application as (Name as string), ApplicationSource as (Name as string), Author as (Name as string, Organization as string)), Product as (GeometrySet as (Curve12Set as ({@n} as short, Nurbs12 as ({@id} as short, Nurbs12Core as ({@domain} as string, CPs as ({@count} as short, {_value_} as string), Knots as ({@count} as short, {_value_} as string), Order as short))[], Segment12 as ({@id} as short, Segment12Core as ({@domain} as string, EndPoint as string, StartPoint as string))[]), Curve13Set as ({@n} as short, ArcCircular13 as ({@id} as short, ArcCircular13Core as ({@domain} as string, Center as string, DirBeg as string, Normal as string, Radius as double))[], Segment13 as ({@id} as short, Segment13Core as ({@domain} as string, EndPoint as string, StartPoint as string))[]), PointSet as ({@n} as short, Point as ({@id} as short, XYZ as string)[]), SurfaceSet as ({@n} as short, Cylinder23 as ({@id} as short, Cylinder23Core as ({@scaleV} as double, Axis as (AxisPoint as string, Direction as string), Diameter as double, Length as boolean, Sweep as (DirBeg as string, DomainAngle as string))), Plane23 as ({@id} as short, Plane23Core as ({@domainU} as string, {@domainV} as string, DirU as string, DirV as string, Origin as string))[])), Header as (Application as (Name as string), ApplicationSource as (Name as string), File as (Name as string), MassPropertyTolerance as short, ModelTolerance as double, ScaleCoefficient as boolean), MaterialLibrary as ({@n} as boolean, Material as ({@Index} as boolean, {@MaterialName} as string)), PartSet as ({@n} as boolean, Part as ({@id} as short, {@label} as string, {@materialIndex} as boolean, Attributes as ({@n} as short, AttributeD1 as ({@name} as string, {@value} as short)[], AttributeStr as ({@name} as string, {@value} as string)), BodyIds as ({@n} as boolean, Id as short), CharacteristicNominalIds as ({@n} as boolean, Id as short), FeatureNominalIds as ({@n} as boolean, Id as short), Header as (Application as (Name as string), ApplicationSource as (Name as string), File as (Name as string)), ModelNumber as string, ViewIds as ({@n} as short, Id as short[]))), RootPart as (Id as short), TopologySet as (BodySet as ({@n} as boolean, Body as ({@color} as string, {@form} as string, {@id} as short, {@label} as string, EdgeIds as ({@n} as short, Id as short[]), FaceIds as ({@n} as short, Id as short[]), LoopIds as ({@n} as short, Id as short[]), ShellIds as ({@n} as boolean, Id as short), VertexIds as ({@n} as short, Id as short[]))), EdgeSet as ({@n} as short, Edge as ({@color} as string, {@id} as short, Curve as (Id as short), VertexBeg as (Id as short), VertexEnd as (Id as short))[]), FaceSet as ({@n} as short, Face as ({@color} as string, {@id} as short, {@turned} as boolean, LoopIds as ({@n} as short, Id as short[]), Surface as (Id as short))[]), LoopSet as ({@n} as short, Loop as ({@color} as string, {@form} as string, {@id} as short, CoEdges as ({@n} as short, CoEdge as (Curve12 as (Id as short), EdgeOriented as ({@turned} as boolean, Id as short))[]))[]), ShellSet as ({@n} as boolean, Shell as ({@closed} as boolean, {@color} as string, {@id} as short, FaceIds as ({@n} as short, Id as short[]))), VertexSet as ({@n} as short, Vertex as ({@color} as string, {@id} as short, Point as (Id as short))[])), ViewSet as (AnnotationViewSet as ({@n} as boolean, AnnotationView as ({@id} as short, Direction as string, Normal as string)), CameraSet as ({@n} as short, Camera as ({@id} as short, Far as double, Height as double, Near as double, Orientation as (Value as string), Ratio as boolean, ViewPlaneOrigin as string)[]), SavedViewSet as ({@n} as short, SavedView as ({@id} as short, {@label} as string, ActiveView as boolean, AnnotationVisibleIds as ({@n} as boolean, Id as short), Attributes as ({@n} as boolean, AttributeI1 as ({@name} as string, {@value} as boolean)), CameraIds as ({@n} as boolean, Id as short))[])), VisualizationSet as (Fonts as ({@n} as short, Font as ({@index} as short, Name as string, Size as short)[]), PMIDisplaySet as ({@n} as boolean, PMIDisplay as (Attributes as ({@n} as short, AttributeBool as ({@name} as string, {@value} as boolean), AttributeI1 as ({@name} as string, {@value} as boolean)[], AttributeI2 as ({@name} as string, {@value} as string), AttributeUser as ({@name} as string, {@nameUserAttribute} as string, UserDataXML as (PresentationColors as ({@xmlns} as string, CrvColor as ({@count} as boolean), TrColor as ({@count} as boolean))))), Color as string, LeaderExtend as (EndPoint as string, HeadForm as string, HeadHeight as double, PointExtension as string, StartPoint as string), Plane as (AnnotationViewId as (Id as short), Origin as string), Reference as (Id as short), Texts as ({@fontIndex} as boolean, {@lineHeight} as double, {@n} as short, Text as (Data as string, XY as string)[]))))), QPId as string, Results as (ActualComponentSets as ({@n} as short, ActualComponentSet as ({@n} as short, ActualComponent as ({@id} as short, SerialNumber as string, Status as (InspectionStatusEnum as string))[])[]), MeasurementResultsSet as ({@n} as short, MeasurementResults as ({@id} as short, ActualComponentIds as ({@n} as short, Id as short[]), InspectionStatus as (InspectionStatusEnum as string), InspectionTraceability as string, MeasuredCharacteristics as (CharacteristicMeasurements as ({@n} as short, AngleBetweenCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], AngleCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], AngleFromCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], AngularCoordinateCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], AngularityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], ChordCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], CircularRunoutCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], CircularityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], CoaxialityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], ConcentricityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], ConicalTaperCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], ConicityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], CurveLengthCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], CylindricityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], DepthCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], DiameterCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], DistanceBetweenCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], DistanceFromCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], EllipticityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], FlatTaperCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], FlatnessCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], HeightCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], LengthCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], LineProfileCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], LinearCoordinateCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], OtherFormCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], ParallelismCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], PerpendicularityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], PointProfileCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], PositionCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], RadiusCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], SphericalDiameterCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], SphericalRadiusCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], SphericityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], SquareCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], StraightnessCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], SurfaceProfileCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], SurfaceProfileNonUniformCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], SurfaceTextureCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], ThicknessCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], ThreadCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], ToroidicityCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], TotalRunoutCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedAngularCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedAreaCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedAttributeCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedForceCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedLinearCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedMassCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedPressureCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedSpeedCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedTemperatureCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedTimeCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], UserDefinedUnitCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldBevelCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldCompoundCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldEdgeCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldFilletCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldFlareBevelCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldFlareVCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldJCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldPlugCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldScarfCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldSeamCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldSlotCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldSpotCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldSquareCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldStudCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldSurfacingCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldUCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WeldVCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[], WidthCharacteristicMeasurement as ({@id} as short, ActualComponentId as short, CharacteristicItemId as short, FeatureMeasurementIds as ({@n} as short, Id as short[]), Status as (CharacteristicStatusEnum as string), Value as ({@decimalPlaces} as short, {_value_} as double))[])), MeasuredFeatures as ({@n} as short, CircleFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], CircularArcFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], ConeFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], ConicalSegmentFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], CylinderFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], CylindricalSegmentFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], EdgePointFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], EllipseFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], EllipticalArcFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], ElongatedCircleFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], ElongatedCylinderFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], ExtrudedCrossSectionFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], GroupFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], LineFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], MarkingFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], OppositeAngledLinesFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], OppositeAngledPlanesFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], OppositeParallelLinesFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], OppositeParallelPlanesFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], OtherCurveFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], OtherNonShapeFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], OtherShapeFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], OtherSurfaceFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], PlaneFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], PointDefinedCurveFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], PointDefinedSurfaceFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], PointFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], SphereFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], SphericalSegmentFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], SurfaceOfRevolutionFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], ThreadedFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], ToroidalSegmentFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[], TorusFeatureMeasurement as ({@id} as short, ActualComponentId as short, FeatureItemId as short)[]))[])), StandardsDefinitions as ({@n} as boolean, Standard as ({@id} as short, Designator as string, Organization as (StandardsOrganizationEnum as string))), Version as (TimeCreated as string))",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'xml',",
				"     container: 'measurementqifin',",
				"     validationMode: 'none',",
				"     namespaces: false,",
				"     dateFormats: ['MM/dd/yyyy'],",
				"     preferredIntegralType: 'integer',",
				"     preferredFractionalType: 'float',",
				"     wildcardPaths:['AerohubMFINMapping.qif'],",
				"     inferDriftedColumnReferences: true,",
				"     preferredIntegralReference: 'integer',",
				"     preferredFractionalReference: 'float') ~> MeasurementQIFIn",
				"source(output(",
				"          FeatureType as string,",
				"          Updateid as integer,",
				"          FeatureNominalid as integer,",
				"          FeatureName as string,",
				"          QPID as string,",
				"          Origid as integer,",
				"          FileVersion as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'FeatureItems',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> FeatureUpdate",
				"source(output(",
				"          CharacteristicType as string,",
				"          Updateid as integer,",
				"          Name as string,",
				"          CharacteristicNominalid as integer,",
				"          QPID as string,",
				"          Origid as integer,",
				"          FileVersion as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CharacteristicUpdate",
				"MeasurementQIFIn select(mapColumn(",
				"          CharacteristicItems = QIFDocument.Characteristics.CharacteristicItems,",
				"          QPId = QIFDocument.QPId",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> CharacteristicItemSelect",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.AngleBetweenCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.AngleBetweenCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.AngleBetweenCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> AngleBetweenReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.AngleCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.AngleCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.AngleCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> AngleReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.AngularCoordinateCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.AngularCoordinateCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.AngularCoordinateCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> AngularCoordinateReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.AngleFromCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.AngleFromCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.AngleFromCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> AngleFromReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.AngularityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.AngularityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.AngularityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> AngularityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.ChordCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.ChordCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.ChordCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ChordReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.CircularityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.CircularityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.CircularityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> CircularityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.CircularRunoutCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.CircularRunoutCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.CircularRunoutCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> CircularRunoutReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.CoaxialityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.CoaxialityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.CoaxialityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> CoaxialityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.ConcentricityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.ConcentricityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.ConcentricityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ConcentricityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.ConicalTaperCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.ConicalTaperCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.ConicalTaperCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ConicalTaperReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.ConicityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.ConicityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.ConicityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ConicityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.CurveLengthCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.CurveLengthCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.CurveLengthCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> CurveLengthReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.CylindricityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.CylindricityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.CylindricityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> CylindricityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.DepthCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.DepthCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.DepthCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> DepthReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.DiameterCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.DiameterCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.DiameterCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> DiameterReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.DistanceBetweenCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.DistanceBetweenCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.DistanceBetweenCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> DistanceBetweenReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.DistanceFromCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.DistanceFromCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.DistanceFromCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> DistanceFromReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.EllipticityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.EllipticityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.EllipticityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> EllipticityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.FlatTaperCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.FlatTaperCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.FlatTaperCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlatTaperReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.FlatnessCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.FlatnessCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.FlatnessCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlatnessReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.HeightCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.HeightCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.HeightCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> HeightReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.LengthCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.LengthCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.LengthCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> LengthReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.LinearCoordinateCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.LinearCoordinateCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.LinearCoordinateCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> LinearCoordinateReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.LineProfileCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.LineProfileCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.LineProfileCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> LineProfileReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.OtherFormCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.OtherFormCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.OtherFormCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> OtherFormReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.ParallelismCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.ParallelismCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.ParallelismCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ParallelismReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.PerpendicularityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.PerpendicularityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.PerpendicularityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> PerpendicularityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.PointProfileCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.PointProfileCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.PointProfileCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> PointProfileReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.PositionCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.PositionCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.PositionCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> PositionReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.RadiusCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.RadiusCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.RadiusCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> RadiusReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.SphericalDiameterCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.SphericalDiameterCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.SphericalDiameterCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SphericalDiameterReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.SphericalRadiusCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.SphericalRadiusCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.SphericalRadiusCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SphericalRadiusReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.SphericityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.SphericityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.SphericityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SphericityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.SquareCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.SquareCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.SquareCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SquareReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.StraightnessCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.StraightnessCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.StraightnessCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> StraightnessReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.SurfaceProfileCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.SurfaceProfileCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.SurfaceProfileCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SurfaceProfileReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.SurfaceProfileNonUniformCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.SurfaceProfileNonUniformCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.SurfaceProfileNonUniformCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SurfaceProfileNonUniformReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.SurfaceTextureCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.SurfaceTextureCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.SurfaceTextureCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SurfaceTextureReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.SymmetryCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.SymmetryCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.SymmetryCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SymmetryReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.ThicknessCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.ThicknessCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.ThicknessCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ThicknessReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.ThreadCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.ThreadCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.ThreadCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ThreadReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.ToroidicityCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.ToroidicityCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.ToroidicityCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ToroidicityReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.TotalRunoutCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.TotalRunoutCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.TotalRunoutCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> TotalRunoutReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedAttributeCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedAttributeCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedAttributeCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedAttributeReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedLinearCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedLinearCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedLinearCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedLinearReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedAngularCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedAngularCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedAngularCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedAngularReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedTemperatureCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedTemperatureCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedTemperatureCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedTemperatureReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedAreaCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedAreaCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedAreaCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedAreaReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedForceCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedForceCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedForceCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedForceReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedMassCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedMassCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedMassCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedMassReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedPressureCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedPressureCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedPressureCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedPressureReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedSpeedCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedSpeedCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedSpeedCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedSpeedReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedTimeCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedTimeCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedTimeCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedTimeReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.UserDefinedUnitCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.UserDefinedUnitCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.UserDefinedUnitCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UserDefinedUnitReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldFilletCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldFilletCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldFilletCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldFilletReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldPlugCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldPlugCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldPlugCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldPlugReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldSlotCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldSlotCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldSlotCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldSlotReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldSpotCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldSpotCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldSpotCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldSpotReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldStudCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldStudCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldStudCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldStudReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldSeamCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldSeamCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldSeamCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldSeamReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldSurfacingCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldSurfacingCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldSurfacingCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldSurfacingReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldEdgeCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldEdgeCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldEdgeCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldEdgeReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldSquareCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldSquareCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldSquareCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldSquareReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldBevelCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldBevelCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldBevelCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldBevelReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldVCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldVCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldVCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldVReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldUCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldUCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldUCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldUReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldJCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldJCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldJCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldJReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldFlareVCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldFlareVCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldFlareVCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldFlareVReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldFlareBevelCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldFlareBevelCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldFlareBevelCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldFlareBevelReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldScarfCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldScarfCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldScarfCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldScarfReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WeldCompoundCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WeldCompoundCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WeldCompoundCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WeldCompoundReference",
				"CharacteristicItemSelect foldDown(unroll(CharacteristicItems.WidthCharacteristicItem.FeatureItemIds.Id),",
				"     mapColumn(",
				"          QPID = QPId,",
				"          Characteristicid = CharacteristicItems.WidthCharacteristicItem.{@id},",
				"          Featureid = CharacteristicItems.WidthCharacteristicItem.FeatureItemIds.Id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> WidthReference",
				"AngleBetweenReference, AngleReference, AngularCoordinateReference, AngleFromReference, AngularityReference, ChordReference, CircularityReference, CircularRunoutReference, CoaxialityReference, ConcentricityReference, ConicalTaperReference, ConicityReference, CurveLengthReference, CylindricityReference, DepthReference, DiameterReference, DistanceBetweenReference, DistanceFromReference, EllipticityReference, FlatTaperReference, FlatnessReference, HeightReference, LengthReference, LinearCoordinateReference, LineProfileReference, OtherFormReference, ParallelismReference, PerpendicularityReference, PointProfileReference, PositionReference, RadiusReference, SphericalDiameterReference, SphericalRadiusReference, SphericityReference, SquareReference, StraightnessReference, SurfaceProfileReference, SurfaceProfileNonUniformReference, SurfaceTextureReference, SymmetryReference, ThicknessReference, ThreadReference, ToroidicityReference, TotalRunoutReference, UserDefinedAttributeReference, UserDefinedLinearReference, UserDefinedAngularReference, UserDefinedTemperatureReference, UserDefinedAreaReference, UserDefinedForceReference, UserDefinedMassReference, UserDefinedPressureReference, UserDefinedSpeedReference, UserDefinedTimeReference, UserDefinedUnitReference, WidthReference, WeldFilletReference, WeldPlugReference, WeldSlotReference, WeldSpotReference, WeldStudReference, WeldSeamReference, WeldSurfacingReference, WeldEdgeReference, WeldSquareReference, WeldBevelReference, WeldVReference, WeldUReference, WeldJReference, WeldFlareVReference, WeldFlareBevelReference, WeldScarfReference, WeldCompoundReference union(byName: true)~> ReferenceUnion",
				"ReferenceUnion alterRow(deleteIf(isNull(Characteristicid))) ~> RemoveNullRows",
				"FeatureLookup select(mapColumn(",
				"          FeatureOrigid = Origid,",
				"          FeatureUpdateid = Updateid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> FeatureIdSelect",
				"MeasurementQIFIn select(mapColumn(",
				"          FileVersion = QIFDocument.Version.TimeCreated",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> VersionSelect",
				"VersionSelect derive(FileVersion = toTimestamp(FileVersion,'yyyy-MM-dd\\'T\\'HH:mm:ss')) ~> ToTimestamp",
				"CharacteristicUpdate, VersionJoin lookup(CharacteristicUpdate@QPID == ReferenceUnion@QPID",
				"     && CharacteristicUpdate@FileVersion == ToTimestamp@FileVersion",
				"     && Origid == Characteristicid,",
				"     multiple: true,",
				"     broadcast: 'auto',",
				"     pickup: 'any')~> CharacterisitcLookup",
				"FeatureUpdate, VersionJoin lookup(FeatureUpdate@QPID == ReferenceUnion@QPID",
				"     && FeatureUpdate@FileVersion == ToTimestamp@FileVersion",
				"     && Origid == Featureid,",
				"     multiple: true,",
				"     broadcast: 'auto',",
				"     pickup: 'any')~> FeatureLookup",
				"CharacterisitcLookup select(mapColumn(",
				"          CharacteristicOrigid = Origid,",
				"          CharacterisitcUpdateid = Updateid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CharacteristicIdSelect",
				"RemoveNullRows, ToTimestamp join(1 == 1,",
				"     joinType:'cross',",
				"     broadcast: 'auto')~> VersionJoin",
				"VersionJoin, FeatureIdSelect join(Featureid == FeatureOrigid,",
				"     joinType:'right',",
				"     broadcast: 'auto')~> FeatureUpdateJoin",
				"FeatureUpdateJoin, CharacteristicIdSelect join(Characteristicid == CharacteristicOrigid,",
				"     joinType:'right',",
				"     broadcast: 'auto')~> CharacteristicUpdateJoin",
				"CharacteristicUpdateJoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          QPID as string,",
				"          Featureid as integer,",
				"          Characteristicid as integer,",
				"          UpdatedFeatureid as integer,",
				"          UpdatedCharacteristicid as integer,",
				"          FileVersion as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          QPID,",
				"          Featureid,",
				"          Characteristicid,",
				"          UpdatedFeatureid = FeatureUpdateid,",
				"          UpdatedCharacteristicid = CharacterisitcUpdateid,",
				"          FileVersion",
				"     )) ~> CharacterFeatureReferenceSink"
			]
		}
	}
}